{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamCreate.js\";\nimport React, { PropTypes } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n  renderInput(input, label) {\n    return React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \" \", input.label, \"  \")) // <input   {...formProps.input}   />   // jsx syntax 0f below syntax\n    // <input   onChange ={formProps.input.onChange}  value= {formProps.input.value}  />\n    ;\n  }\n\n  onmySubmit({\n    title,\n    description\n  }) {\n    console.log(\"formvalue\", title); //    event.preventDefault();\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      fields: {\n        title,\n        description\n      }\n    } = this.props;\n    console.log(this.props);\n    return React.createElement(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleSubmit(this.onmySubmit.bind(this)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      type: \"text\",\n      component: this.renderInput,\n      label: \"Enter Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"description\",\n      type: \"text\",\n      component: this.renderInput,\n      label: \"Enter Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default reduxForm({\n  form: 'streamCreate',\n  fields: ['title', 'description']\n})(StreamCreate);","map":{"version":3,"sources":["E:/React/streams/client/src/components/streams/StreamCreate.js"],"names":["React","PropTypes","Field","reduxForm","StreamCreate","Component","renderInput","input","label","onmySubmit","title","description","console","log","render","handleSubmit","fields","props","bind","form"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;;AAGA,MAAOC,YAAP,SAA4BJ,KAAK,CAACK,SAAlC,CAA2C;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAiB;AACvB,WACG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAASD,KAAK,CAACC,KAAf,OADJ,CADH,CAKG;AACA;AANH;AAQJ;;AACDC,EAAAA,UAAU,CAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,EAAuB;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,KAAzB,EADiC,CAErC;AACC;;AAEGI,EAAAA,MAAM,GAAE;AAEJ,UAAM;AAACC,MAAAA,YAAD;AAAeC,MAAAA,MAAM,EAAE;AAACN,QAAAA,KAAD;AAAQC,QAAAA;AAAR;AAAvB,QAA+C,KAAKM,KAA1D;AAEAL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAjB;AACA,WAAS;AAAO,MAAA,SAAS,EAAC,SAAjB;AAA4B,MAAA,QAAQ,EAAKF,YAAY,CAAC,KAAKN,UAAL,CAAgBS,IAAhB,CAAqB,IAArB,CAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAyC,MAAA,SAAS,EAAE,KAAKZ,WAAzD;AAAuE,MAAA,KAAK,EAAG,aAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,EAEL,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA4B,MAAA,IAAI,EAAC,MAAjC;AAA0C,MAAA,SAAS,EAAE,KAAKA,WAA1D;AAAwE,MAAA,KAAK,EAAG,mBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,EAGL;AAAS,MAAA,SAAS,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHK,CAAT;AAOH;;AA7BsC;;AAyC3C,eAAgBH,SAAS,CAAC;AAAUgB,EAAAA,IAAI,EAAC,cAAf;AAC1BH,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,aAAV;AADkB,CAAD,CAAT,CAEbZ,YAFa,CAAhB","sourcesContent":[" \r\nimport React, { PropTypes} from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\n\r\n\r\nclass  StreamCreate extends React.Component{\r\n\r\n    renderInput(input ,label   ){\r\n         return (\r\n            <div className=\"field\">\r\n                <label> {input.label}  </label>\r\n            {/* <input {...input}   /> */}\r\n            </div>\r\n            // <input   {...formProps.input}   />   // jsx syntax 0f below syntax\r\n            // <input   onChange ={formProps.input.onChange}  value= {formProps.input.value}  />\r\n        )\r\n    }\r\n    onmySubmit({title, description} ){\r\n    console.log(\"formvalue\", title)\r\n//    event.preventDefault();\r\n}\r\n\r\n    render(){\r\n\r\n        const {handleSubmit, fields: {title, description}} = this.props;\r\n\r\n        console.log(this.props);\r\n        return ( <form  className=\"ui form\"  onSubmit = { handleSubmit(this.onmySubmit.bind(this))} >\r\n            <Field name=\"title\"   type=\"text\"        component={this.renderInput}  label = 'Enter Title' />\r\n            <Field name=\"description\"   type=\"text\"   component={this.renderInput}  label = \"Enter Description\"   /> \r\n            <button  className=\"ui button primary\">Submit</button>\r\n\r\n        \r\n        </form>)\r\n    }\r\n    \r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n}\r\n\r\nexport default  reduxForm({         form:'streamCreate'  ,\r\nfields: ['title', 'description']\r\n})(StreamCreate);\r\n"]},"metadata":{},"sourceType":"module"}
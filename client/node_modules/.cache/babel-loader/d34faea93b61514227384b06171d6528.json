{"ast":null,"code":"import _classCallCheck from\"E:\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"E:\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"E:\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"E:\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import{signIn,signOut}from'../actions';// this is not using Redux\n// class GoogleAuth extends React.Component{\n//     state = {isSignedIn : null};\n//     componentDidMount(){\n//         window.gapi.load('client:auth2' , () =>{\n//             window.gapi.client.init({\n//                 clientId : '548147403800-qhiek0431mroa1d8vv1n8rb65p6dvg2r.apps.googleusercontent.com' ,\n//                 scope: 'email'\n//             }).then( () =>{\n//                 this.auth = window.gapi.auth2.getAuthInstance();\n//                  this.setState({ isSignedIn : this.auth.isSignedIn.get()}) \n//                 this.auth.isSignedIn.listen(this.onAuthChange);\n//             });\n//         });\n//     }\n//     onAuthChange = () =>{\n//         this.setState({ isSignedIn : this.auth.isSignedIn.get()}) ;\n//     }\n//     onSignInClick= () => {\n//         this.auth.signIn();\n//     }\n//     onSignOutClick = () => {\n//         this.auth.signOut();\n//     }\n//     renderAuthButton() {\n//     if  (this.state.isSignedIn === null){\n//         return null;\n//     } else  if (this.state.isSignedIn){\n//         return (<button onClick = {this.onSignOutClick} className=\"ui red google button\"> \n//          {/* no parenthesis on onsignin because we dont want this to execute when page loads */}\n//             <i className = \"google icon\"> SignOut </i>\n//             </button>\n//             )\n//     }\n//     return (<button onClick = {this.onSignInClick} className=\"ui red google button\">\n//     <i className = \"google icon\">SignIn with Google</i>\n//     </button>\n//     )\n// }    \n// render(){ \n//        return <div>   {this.renderAuthButton()}         </div>\n// }\n// }\n// export default GoogleAuth;\n// This is using redux , Action Creators are managing access to gapi\nvar GoogleAuth=/*#__PURE__*/function(_React$Component){_inherits(GoogleAuth,_React$Component);function GoogleAuth(){var _getPrototypeOf2;var _this;_classCallCheck(this,GoogleAuth);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(GoogleAuth)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.onAuthChange=function(isSignedIn){if(isSignedIn){_this.props.signIn(_this.auth.currentUser.get().getId());}else{_this.props.signOut();}//this.setState({ isSignedIn : this.auth.isSignedIn.get()}) ;\n};_this.onSignInClick=function(){_this.auth.signIn();};_this.onSignOutClick=function(){_this.auth.signOut();};return _this;}_createClass(GoogleAuth,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;window.gapi.load('client:auth2',function(){window.gapi.client.init({clientId:'548147403800-qhiek0431mroa1d8vv1n8rb65p6dvg2r.apps.googleusercontent.com',scope:'email'}).then(function(){_this2.auth=window.gapi.auth2.getAuthInstance();_this2.onAuthChange(_this2.auth.isSignedIn.get());//this.setState({ isSignedIn : this.auth.isSignedIn.get()}) \n_this2.auth.isSignedIn.listen(_this2.onAuthChange);});});}},{key:\"renderAuthButton\",value:function renderAuthButton(){if(this.props.isSignedIn===null){return null;}else if(this.props.isSignedIn){return React.createElement(\"button\",{onClick:this.onSignOutClick,className:\"ui red google button\"},React.createElement(\"i\",{className:\"google icon\"},\" SignOut \"));}return React.createElement(\"button\",{onClick:this.onSignInClick,className:\"ui red google button\"},React.createElement(\"i\",{className:\"google icon\"},\"SignIn with Google\"));}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,\"   \",this.renderAuthButton(),\"         \");}}]);return GoogleAuth;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{isSignedIn:state.auth.isSignedIn};};export default connect(mapStateToProps,{signIn:signIn,signOut:signOut})(GoogleAuth);","map":{"version":3,"sources":["E:/React/streams/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Component","mapStateToProps","state"],"mappings":"8jBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,MAAR,CAAeC,OAAf,KAA6B,YAA7B,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;GACMC,CAAAA,U,2ZAeFC,Y,CAAe,SAACC,UAAD,CAAe,CAE1B,GAAKA,UAAL,CAAgB,CACZ,MAAKC,KAAL,CAAWL,MAAX,CAAkB,MAAKM,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB,EACH,CAFD,IAGI,CACA,MAAKJ,KAAL,CAAWJ,OAAX,GACH,CACD;AACH,C,OAEDS,a,CAAe,UAAM,CACjB,MAAKJ,IAAL,CAAUN,MAAV,GACH,C,OAEDW,c,CAAiB,UAAM,CACnB,MAAKL,IAAL,CAAUL,OAAV,GAEH,C,mGAhCqB,iBAClBW,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,CAAkC,UAAK,CACnCF,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB,CACpBC,QAAQ,CAAG,0EADS,CAEpBC,KAAK,CAAE,OAFa,CAAxB,EAGGC,IAHH,CAGS,UAAK,CAEV,MAAI,CAACb,IAAL,CAAYM,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ,CACA,MAAI,CAAClB,YAAL,CAAkB,MAAI,CAACG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB,EACA;AACA,MAAI,CAACF,IAAL,CAAUF,UAAV,CAAqBkB,MAArB,CAA4B,MAAI,CAACnB,YAAjC,EACH,CATD,EAUH,CAXD,EAYH,C,2DAoBkB,CACnB,GAAK,KAAKE,KAAL,CAAWD,UAAX,GAA0B,IAA/B,CAAoC,CAChC,MAAO,KAAP,CACH,CAFD,IAEQ,IAAI,KAAKC,KAAL,CAAWD,UAAf,CAA0B,CAC9B,MAAQ,+BAAQ,OAAO,CAAI,KAAKO,cAAxB,CAAwC,SAAS,CAAC,sBAAlD,EAEJ,yBAAG,SAAS,CAAG,aAAf,cAFI,CAAR,CAKH,CACD,MAAQ,+BAAQ,OAAO,CAAI,KAAKD,aAAxB,CAAuC,SAAS,CAAC,sBAAjD,EACR,yBAAG,SAAS,CAAG,aAAf,uBADQ,CAAR,CAIH,C,uCACO,CACD,MAAO,sCAAS,KAAKa,gBAAL,EAAT,aAAP,CACN,C,wBAnDwBzB,KAAK,CAAC0B,S,EAuD/B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAU,CAC9B,MAAO,CAACtB,UAAU,CAAGsB,KAAK,CAACpB,IAAN,CAAWF,UAAzB,CAAP,CACH,CAFD,CAGA,cAAeL,CAAAA,OAAO,CAAC0B,eAAD,CAAiB,CAACzB,MAAM,CAANA,MAAD,CAASC,OAAO,CAAPA,OAAT,CAAjB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from 'react';\r\n\r\n\r\nimport {connect} from 'react-redux';\r\nimport {signIn,signOut} from '../actions';\r\n\r\n// this is not using Redux\r\n// class GoogleAuth extends React.Component{\r\n\r\n//     state = {isSignedIn : null};\r\n//     componentDidMount(){\r\n//         window.gapi.load('client:auth2' , () =>{\r\n//             window.gapi.client.init({\r\n//                 clientId : '548147403800-qhiek0431mroa1d8vv1n8rb65p6dvg2r.apps.googleusercontent.com' ,\r\n//                 scope: 'email'\r\n//             }).then( () =>{\r\n\r\n//                 this.auth = window.gapi.auth2.getAuthInstance();\r\n//                  this.setState({ isSignedIn : this.auth.isSignedIn.get()}) \r\n                \r\n//                 this.auth.isSignedIn.listen(this.onAuthChange);\r\n//             });\r\n//         });\r\n//     }\r\n//     onAuthChange = () =>{\r\n//         this.setState({ isSignedIn : this.auth.isSignedIn.get()}) ;\r\n//     }\r\n\r\n//     onSignInClick= () => {\r\n//         this.auth.signIn();\r\n//     }\r\n\r\n//     onSignOutClick = () => {\r\n//         this.auth.signOut();\r\n\r\n//     }\r\n//     renderAuthButton() {\r\n//     if  (this.state.isSignedIn === null){\r\n//         return null;\r\n//     } else  if (this.state.isSignedIn){\r\n//         return (<button onClick = {this.onSignOutClick} className=\"ui red google button\"> \r\n//          {/* no parenthesis on onsignin because we dont want this to execute when page loads */}\r\n//             <i className = \"google icon\"> SignOut </i>\r\n//             </button>\r\n//             )\r\n//     }\r\n//     return (<button onClick = {this.onSignInClick} className=\"ui red google button\">\r\n//     <i className = \"google icon\">SignIn with Google</i>\r\n//     </button>\r\n//     )\r\n// }    \r\n// render(){ \r\n//        return <div>   {this.renderAuthButton()}         </div>\r\n// }\r\n\r\n// }\r\n\r\n// export default GoogleAuth;\r\n\r\n\r\n// This is using redux , Action Creators are managing access to gapi\r\nclass GoogleAuth extends React.Component{\r\n       componentDidMount(){\r\n        window.gapi.load('client:auth2' , () =>{\r\n            window.gapi.client.init({\r\n                clientId : '548147403800-qhiek0431mroa1d8vv1n8rb65p6dvg2r.apps.googleusercontent.com' ,\r\n                scope: 'email'\r\n            }).then( () =>{\r\n\r\n                this.auth = window.gapi.auth2.getAuthInstance();\r\n                this.onAuthChange(this.auth.isSignedIn.get()) \r\n                //this.setState({ isSignedIn : this.auth.isSignedIn.get()}) \r\n                this.auth.isSignedIn.listen(this.onAuthChange);\r\n            });\r\n        });\r\n    }\r\n    onAuthChange = (isSignedIn) =>{\r\n\r\n        if  (isSignedIn){\r\n            this.props.signIn(this.auth.currentUser.get().getId());\r\n        }\r\n        else{\r\n            this.props.signOut();\r\n        }\r\n        //this.setState({ isSignedIn : this.auth.isSignedIn.get()}) ;\r\n    }\r\n\r\n    onSignInClick= () => {\r\n        this.auth.signIn();\r\n    }\r\n\r\n    onSignOutClick = () => {\r\n        this.auth.signOut();\r\n\r\n    }\r\n    renderAuthButton() {\r\n    if  (this.props.isSignedIn === null){\r\n        return null;\r\n    } else  if (this.props.isSignedIn){\r\n        return (<button onClick = {this.onSignOutClick} className=\"ui red google button\"> \r\n         {/* no parenthesis on onsignin because we dont want this to execute when page loads */}\r\n            <i className = \"google icon\"> SignOut </i>\r\n            </button>\r\n            )\r\n    }\r\n    return (<button onClick = {this.onSignInClick} className=\"ui red google button\">\r\n    <i className = \"google icon\">SignIn with Google</i>\r\n    </button>\r\n    )\r\n}    \r\nrender(){ \r\n       return <div>   {this.renderAuthButton()}         </div>\r\n}\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {isSignedIn : state.auth.isSignedIn };\r\n}\r\nexport default connect(mapStateToProps,{signIn, signOut})(GoogleAuth);\r\n"]},"metadata":{},"sourceType":"module"}
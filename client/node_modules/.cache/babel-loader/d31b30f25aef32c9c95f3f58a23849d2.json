{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    console.log(this.props);\n\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.props.stream.title, \" \");\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit); //With react-route each component needs to designed to work in isolation ( fetch its own data)","map":{"version":3,"sources":["E:/React/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","StreamEdit","Component","componentDidMount","props","match","params","id","render","console","log","stream","title","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AAGA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAGrCC,EAAAA,iBAAiB,GAAE;AAGd,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;;AACA,QAAG,CAAC,KAAKA,KAAL,CAAWO,MAAf,EAAsB;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AACH,WAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKP,KAAL,CAAWO,MAAX,CAAkBC,KAAxB,MAAT;AACD;;AAfsC;;AAqBzC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAASC,QAAT,KAAuB;AAC/C,SAAO;AAACJ,IAAAA,MAAM,EAAIG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACV,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAX,GAAP;AAEC,CAHD;;AAOA,eAAeR,OAAO,CAAEc,eAAF,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,UAAzC,CAAf,C,CAGA","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchStream} from '../../actions';\r\n\r\n\r\nclass StreamEdit extends React.Component {\r\n  \r\n\r\n    componentDidMount(){\r\n        \r\n       \r\n         this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    render (){\r\n      console.log(this.props)\r\n      if(!this.props.stream){\r\n          return <div>Loading...</div>\r\n      }\r\n    return ( <div>{this.props.stream.title} </div>)\r\n  }\r\n}\r\n\r\n\r\n\r\n \r\nconst mapStateToProps = (state , ownProps ) => {\r\nreturn {stream :  state.streams[ownProps.match.params.id]}\r\n\r\n};\r\n\r\n\r\n\r\nexport default connect (mapStateToProps,{ fetchStream})(StreamEdit);\r\n\r\n\r\n//With react-route each component needs to designed to work in isolation ( fetch its own data)"]},"metadata":{},"sourceType":"module"}
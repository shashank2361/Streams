{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"StreamShow\");\n    }\n\n    const {\n      title,\n      description\n    } = this.props.stream;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"title\"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"description\"));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["E:/React/streams/client/src/components/streams/StreamShow.js"],"names":["React","connect","fetchStream","StreamShow","Component","componentDidMount","console","log","props","match","params","id","render","stream","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA2B,eAA3B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwC;AAEpCC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAGDC,EAAAA,MAAM,GAAI;AACN,QAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EAAuB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACF;;AAED,UAAM;AAACC,MAAAA,KAAD;AAASC,MAAAA;AAAT,QAAwB,KAAKP,KAAL,CAAWK,MAAzC;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFI,CADJ;AAMH;;AApBmC;;AAwBxC,MAAMG,eAAe,GAAG,CAACC,KAAD,EAASC,QAAT,KAAuB;AAC3C,SAAO;AAACL,IAAAA,MAAM,EAAII,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAX,GAAP;AAEC,CAHL;;AAOA,eAAeV,OAAO,CAAEe,eAAF,EAAkB;AAACd,EAAAA;AAAD,CAAlB,CAAP,CAAwCC,UAAxC,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchStream } from '../../actions';\r\n\r\nclass StreamShow extends React.Component{\r\n\r\n    componentDidMount(){\r\n        console.log(this.props)\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n\r\n    render () {\r\n        if(!this.props.stream) {\r\n           return <div>StreamShow</div>\r\n        }\r\n\r\n        const {title , description} = this.props.stream;\r\n        return (\r\n            <div>\r\n                <h1>title</h1>\r\n        <h5>description</h5>\r\n            </div>\r\n        )\r\n    };\r\n\r\n}\r\n\r\nconst mapStateToProps = (state , ownProps ) => {\r\n    return {stream :  state.streams[ownProps.match.params.id]}\r\n    \r\n    };\r\n    \r\n    \r\n \r\nexport default connect (mapStateToProps,{fetchStream})(StreamShow);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui negative button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Cancel\")) // to avoid div <React.Fragment or <> is used \n    ;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"StreamDelete\", React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: \"Are you sure you want to delete this stream?\",\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nmapsStateToProps = (state, ownprops) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapsStateToProps, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["E:/React/streams/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Modal","history","fetchStream","StreamDelete","Component","componentDidMount","console","log","props","match","params","id","renderActions","render","push","mapsStateToProps","state","ownprops","stream","streams","ownProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AAGA,MAAOC,YAAP,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AAExCC,EAAAA,iBAAiB,GAAE;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC;AACA,SAAKH,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACP;;AAIDC,EAAAA,aAAa,GAAG;AACjB,WACK,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADL,CAKK;AALL;AAMG;;AAOLC,EAAAA,MAAM,GAAE;AACL,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,oBAAC,KAAD;AAAS,MAAA,KAAK,EAAC,eAAf;AACA,MAAA,OAAO,EAAE,8CADT;AAEA,MAAA,OAAO,EAAI,KAAKD,aAAL,EAFX;AAGI,MAAA,SAAS,EAAE,MAAMX,OAAO,CAACa,IAAR,CAAa,GAAb,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFJ;AAUC;;AAlCuC;;AAuC5CC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAsB;AACrC,SAAQ;AAAEC,IAAAA,MAAM,EAAIF,KAAK,CAACG,OAAN,CAAcC,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAZ,GAAR;AACH,CAFD;;AAKA,eAAgBZ,OAAO,CAAEgB,gBAAF,EAAoB;AAACb,EAAAA;AAAD,CAApB,CAAP,CAA0CC,YAA1C,CAAhB","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Modal from '../Modal';\r\nimport history from '../../history';\r\nimport {fetchStream} from '../../actions';\r\n\r\n\r\nclass  StreamDelete extends React.Component {\r\n \r\n    componentDidMount(){\r\n            console.log(this.props.match.params.id)\r\n            this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n\r\n\r\n    renderActions() {\r\n   return(\r\n        <React.Fragment>\r\n            <button className=\"ui negative button\">Delete</button>\r\n            <button className=\"ui button\">Cancel</button>     \r\n        </React.Fragment>\r\n        // to avoid div <React.Fragment or <> is used \r\n    )}\r\n\r\n \r\n    \r\n    renderContent\r\n    \r\n    \r\n render(){   \r\n    return(  \r\n\r\n        <div>StreamDelete\r\n        <Modal   title=\"Delete Stream\"\r\n        content =\"Are you sure you want to delete this stream?\"\r\n        actions = {this.renderActions()}\r\n            onDismiss={() => history.push('/')}\r\n        />\r\n    </div>\r\n      );  \r\n    }\r\n}\r\n\r\n\r\n\r\nmapsStateToProps = (state, ownprops ) => {\r\n    return  { stream :  state.streams[ownProps.match.params.id]}\r\n}\r\n\r\n\r\nexport default  connect (mapsStateToProps, {fetchStream})(StreamDelete);\r\n"]},"metadata":{},"sourceType":"module"}
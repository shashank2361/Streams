{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamDelete.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui negative button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(Link, {\n      to: \"/\",\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Cancel\")) // to avoid div <React.Fragment or <> is used \n    ;\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return 'Are you sure want to delete this stream?';\n    }\n\n    return `Are you sure want to delete this stream with title: ${this.props.stream.title}`;\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapsStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapsStateToProps, {\n  fetchStream,\n  deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["E:/React/streams/client/src/components/streams/StreamDelete.js"],"names":["React","Link","connect","Modal","history","fetchStream","deleteStream","StreamDelete","Component","componentDidMount","console","log","props","match","params","id","renderActions","renderContent","stream","title","render","push","mapsStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAGA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,WAAR,EAAsBC,YAAtB,QAAyC,eAAzC;;AAEA,MAAOC,YAAP,SAA4BP,KAAK,CAACQ,SAAlC,CAA4C;AAExCC,EAAAA,iBAAiB,GAAE;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC;AACA,SAAKH,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACP;;AAIDC,EAAAA,aAAa,GAAG;AACjB,WACK,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAX;AAAe,MAAA,SAAS,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADL,CAKK;AALL;AAMG;;AAIFC,EAAAA,aAAa,GAAE;AACX,QAAG,CAAC,KAAKL,KAAL,CAAWM,MAAf,EAAsB;AACjB,aAAO,0CAAP;AACJ;;AACD,WAAQ,uDAAsD,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAAM,EAAtF;AACH;;AAGDC,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,eADV;AAEI,MAAA,OAAO,EAAI,KAAKH,aAAL,EAFf;AAGI,MAAA,OAAO,EAAI,KAAKD,aAAL,EAHf;AAII,MAAA,SAAS,EAAE,MAAMZ,OAAO,CAACiB,IAAR,CAAa,GAAb,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH;;AArCuC;;AA0C5C,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAsB;AAC3C,SAAQ;AAAEN,IAAAA,MAAM,EAAIK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAZ,GAAR;AACH,CAFD;;AAKA,eAAgBb,OAAO,CAAEoB,gBAAF,EAAoB;AAACjB,EAAAA,WAAD;AAAeC,EAAAA;AAAf,CAApB,CAAP,CAAyDC,YAAzD,CAAhB","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nimport {connect} from 'react-redux';\r\nimport Modal from '../Modal';\r\nimport history from '../../history';\r\nimport {fetchStream , deleteStream} from '../../actions';\r\n\r\nclass  StreamDelete extends React.Component {\r\n \r\n    componentDidMount(){\r\n            console.log(this.props.match.params.id)\r\n            this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n\r\n\r\n    renderActions() {\r\n   return(\r\n        <React.Fragment>\r\n            <button className=\"ui negative button\">Delete</button>\r\n            <Link to = \"/\" className=\"ui button\">Cancel</Link>     \r\n        </React.Fragment>\r\n        // to avoid div <React.Fragment or <> is used \r\n    )}\r\n\r\n \r\n    \r\n    renderContent(){\r\n        if(!this.props.stream){\r\n             return 'Are you sure want to delete this stream?'\r\n        }\r\n        return `Are you sure want to delete this stream with title: ${this.props.stream.title}`\r\n    };\r\n    \r\n    \r\n    render(){   \r\n        return(  \r\n            <Modal   \r\n                title=\"Delete Stream\"\r\n                content = {this.renderContent()} \r\n                actions = {this.renderActions()}\r\n                onDismiss={() => history.push('/')}\r\n            />\r\n            );  \r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapsStateToProps = (state, ownProps ) => {\r\n    return  { stream :  state.streams[ownProps.match.params.id]}\r\n}\r\n\r\n\r\nexport default  connect (mapsStateToProps, {fetchStream , deleteStream})(StreamDelete);\r\n"]},"metadata":{},"sourceType":"module"}
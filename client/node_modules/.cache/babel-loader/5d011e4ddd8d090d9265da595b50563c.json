{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    console.log(this.props.currentUserId);\n\n    if (stream.userId === this.props.currentUserId && this.props.currentUserId > 0) {\n      return React.createElement(\"div\", {\n        class: \"right floated content \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \" Edit\"), React.createElement(\"button\", {\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \" Delete\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"          \", this.renderAdmin(stream), React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, stream.title, React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, stream.description)));\n    });\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Streams\"), React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["E:/React/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","console","log","currentUserId","userId","renderList","streams","map","id","title","description","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAC,OAAOA,KAAP,MAAkB,OAAlB;AACD,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA0B,eAA1B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwC;AACxCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWJ,YAAX;AACH;;AAGDK,EAAAA,WAAW,CAACC,MAAD,EAAQ;AAEnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,aAAvB;;AAEA,QAAIH,MAAM,CAACI,MAAP,KAAkB,KAAKN,KAAL,CAAWK,aAA7B,IAA+C,KAAKL,KAAL,CAAWK,aAAX,GAA2B,CAA9E,EAAgF;AAEpE,aAAS;AAAK,QAAA,KAAK,EAAC,wBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAQ,QAAA,SAAS,EAAG,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADH,EAEG;AAAQ,QAAA,SAAS,EAAG,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFH,CAAT;AAKP;AACJ;;AAGDE,EAAAA,UAAU,GAAI;AAEV,WAAO,KAAKP,KAAL,CAAWQ,OAAX,CAAmBC,GAAnB,CAAwBP,MAAM,IAAI;AACrC,aAAQ;AAAK,QAAA,SAAS,EAAG,MAAjB;AAAwB,QAAA,GAAG,EAAGA,MAAM,CAACQ,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAoD,KAAKT,WAAL,CAAiBC,MAAjB,CAApD,EAEJ;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFI,EAGZ;AAAK,QAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BA,MAAM,CAACS,KAAlC,EACA;AAAK,QAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCT,MAAM,CAACU,WAAvC,CADA,CAHY,CAAR;AAOH,KARM,CAAP;AASH;;AAECC,EAAAA,MAAM,GAAG;AACLV,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWQ,OAAvB;AACF,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADH,EAEK;AAAK,MAAA,SAAS,EAAG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKD,UAAL,EAAnC,CAFL,CAAP;AAID;;AAxCqC;;AA4CxC,MAAMO,eAAe,GAAIC,KAAD,IAAU;AAC9B,SAAO;AAACP,IAAAA,OAAO,EAAEQ,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACP,OAApB,CAAV;AACPH,IAAAA,aAAa,EAAEU,KAAK,CAACG,IAAN,CAAWZ;AADnB,GAAP;AAEH,CAHD;;AAKA,eAAeX,OAAO,CAAEmB,eAAF,EAAkB;AAAClB,EAAAA;AAAD,CAAlB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":[" import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {fetchStreams} from'../../actions';\r\n\r\nclass StreamList extends React.Component{\r\ncomponentDidMount(){\r\n    this.props.fetchStreams();\r\n}\r\n\r\n \r\nrenderAdmin(stream){\r\n \r\nconsole.log(this.props.currentUserId )\r\n    \r\nif( stream.userId === this.props.currentUserId &&  this.props.currentUserId > 0){\r\n\r\n            return ( <div class=\"right floated content \">\r\n                        <button className = \"ui button primary\"> Edit</button> \r\n                        <button className = \"ui button negative\"> Delete</button> \r\n                \r\n                </div>)\r\n    }\r\n}\r\n\r\n\r\nrenderList () {\r\n\r\n    return this.props.streams.map( stream => {\r\n        return (<div className = \"item\" key ={stream.id}>          {this.renderAdmin(stream)}\r\n\r\n            <i className=\"large middle aligned icon camera\" />\r\n    <div className =\"content\">{stream.title}\r\n    <div className = \"description\">{stream.description}</div>\r\n    </div>\r\n        </div>)\r\n    })\r\n}\r\n\r\n  render (){ \r\n      console.log(this.props.streams);\r\n    return <div>\r\n              <h2>Streams</h2>\r\n                <div className = \"ui celled list\">{this.renderList()}</div>\r\n        </div>\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {streams :Object.values(state.streams),\r\n    currentUserId: state.auth.userId}\r\n}\r\n \r\nexport default connect (mapStateToProps,{fetchStreams}) (StreamList);\r\n"]},"metadata":{},"sourceType":"module"}
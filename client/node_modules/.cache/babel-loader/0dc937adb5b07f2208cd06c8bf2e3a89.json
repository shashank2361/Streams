{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\GoogleAuth.js\";\nimport React from 'react';\nimport { conncet } from 'react-redux';\nimport { signIn, signOut } from '../actions'; // this is not using Redux\n// class GoogleAuth extends React.Component{\n//     state = {isSignedIn : null};\n//     componentDidMount(){\n//         window.gapi.load('client:auth2' , () =>{\n//             window.gapi.client.init({\n//                 clientId : '548147403800-qhiek0431mroa1d8vv1n8rb65p6dvg2r.apps.googleusercontent.com' ,\n//                 scope: 'email'\n//             }).then( () =>{\n//                 this.auth = window.gapi.auth2.getAuthInstance();\n//                  this.setState({ isSignedIn : this.auth.isSignedIn.get()}) \n//                 this.auth.isSignedIn.listen(this.onAuthChange);\n//             });\n//         });\n//     }\n//     onAuthChange = () =>{\n//         this.setState({ isSignedIn : this.auth.isSignedIn.get()}) ;\n//     }\n//     onSignInClick= () => {\n//         this.auth.signIn();\n//     }\n//     onSignOutClick = () => {\n//         this.auth.signOut();\n//     }\n//     renderAuthButton() {\n//     if  (this.state.isSignedIn === null){\n//         return null;\n//     } else  if (this.state.isSignedIn){\n//         return (<button onClick = {this.onSignOutClick} className=\"ui red google button\"> \n//          {/* no parenthesis on onsignin because we dont want this to execute when page loads */}\n//             <i className = \"google icon\"> SignOut </i>\n//             </button>\n//             )\n//     }\n//     return (<button onClick = {this.onSignInClick} className=\"ui red google button\">\n//     <i className = \"google icon\">SignIn with Google</i>\n//     </button>\n//     )\n// }    \n// render(){ \n//        return <div>   {this.renderAuthButton()}         </div>\n// }\n// }\n// export default GoogleAuth;\n// This is using redux , Action Creators are managing access to gapi\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = isSignedIn => {//this.setState({ isSignedIn : this.auth.isSignedIn.get()}) ;\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '548147403800-qhiek0431mroa1d8vv1n8rb65p6dvg2r.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return React.createElement(\"button\", {\n        onClick: this.onSignOutClick,\n        className: \"ui red google button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"google icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \" SignOut \"));\n    }\n\n    return React.createElement(\"button\", {\n      onClick: this.onSignInClick,\n      className: \"ui red google button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"google icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"SignIn with Google\"));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"   \", this.renderAuthButton(), \"         \");\n  }\n\n}\n\nexport default connect(null, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["E:/React/streams/client/src/components/GoogleAuth.js"],"names":["React","conncet","signIn","signOut","GoogleAuth","Component","state","isSignedIn","onAuthChange","onSignInClick","auth","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","setState","get","listen","renderAuthButton","render","connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,EAAeC,OAAf,QAA6B,YAA7B,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;;AACA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AAACC,MAAAA,UAAU,EAAG;AAAd,KAF4B;;AAAA,SAiBpCC,YAjBoC,GAiBpBD,UAAD,IAAe,CAE1B;AACH,KApBmC;;AAAA,SAsBpCE,aAtBoC,GAsBrB,MAAM;AACjB,WAAKC,IAAL,CAAUR,MAAV;AACH,KAxBmC;;AAAA,SA0BpCS,cA1BoC,GA0BnB,MAAM;AACnB,WAAKD,IAAL,CAAUP,OAAV;AAEH,KA7BmC;AAAA;;AAGpCS,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAkC,MAAK;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAG,0EADS;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGS,MAAK;AAEV,aAAKV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACC,aAAKC,QAAL,CAAc;AAAEhB,UAAAA,UAAU,EAAG,KAAKG,IAAL,CAAUH,UAAV,CAAqBiB,GAArB;AAAf,SAAd;AAED,aAAKd,IAAL,CAAUH,UAAV,CAAqBkB,MAArB,CAA4B,KAAKjB,YAAjC;AACH,OATD;AAUH,KAXD;AAYH;;AAcDkB,EAAAA,gBAAgB,GAAG;AACnB,QAAK,KAAKpB,KAAL,CAAWC,UAAX,KAA0B,IAA/B,EAAoC;AAChC,aAAO,IAAP;AACH,KAFD,MAEQ,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA0B;AAC9B,aAAQ;AAAQ,QAAA,OAAO,EAAI,KAAKI,cAAxB;AAAwC,QAAA,SAAS,EAAC,sBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEJ;AAAG,QAAA,SAAS,EAAG,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFI,CAAR;AAKH;;AACD,WAAQ;AAAQ,MAAA,OAAO,EAAI,KAAKF,aAAxB;AAAuC,MAAA,SAAS,EAAC,sBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR;AAAG,MAAA,SAAS,EAAG,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADQ,CAAR;AAIH;;AACDkB,EAAAA,MAAM,GAAE;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAS,KAAKD,gBAAL,EAAT,cAAP;AACN;;AA/CuC;;AAkDxC,eAAeE,OAAO,CAAC,IAAD,EAAM;AAAC1B,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAN,CAAP,CAAgCC,UAAhC,CAAf","sourcesContent":["import React from 'react';\r\n\r\n\r\nimport {conncet} from 'react-redux';\r\nimport {signIn,signOut} from '../actions';\r\n\r\n// this is not using Redux\r\n// class GoogleAuth extends React.Component{\r\n\r\n//     state = {isSignedIn : null};\r\n//     componentDidMount(){\r\n//         window.gapi.load('client:auth2' , () =>{\r\n//             window.gapi.client.init({\r\n//                 clientId : '548147403800-qhiek0431mroa1d8vv1n8rb65p6dvg2r.apps.googleusercontent.com' ,\r\n//                 scope: 'email'\r\n//             }).then( () =>{\r\n\r\n//                 this.auth = window.gapi.auth2.getAuthInstance();\r\n//                  this.setState({ isSignedIn : this.auth.isSignedIn.get()}) \r\n                \r\n//                 this.auth.isSignedIn.listen(this.onAuthChange);\r\n//             });\r\n//         });\r\n//     }\r\n//     onAuthChange = () =>{\r\n//         this.setState({ isSignedIn : this.auth.isSignedIn.get()}) ;\r\n//     }\r\n\r\n//     onSignInClick= () => {\r\n//         this.auth.signIn();\r\n//     }\r\n\r\n//     onSignOutClick = () => {\r\n//         this.auth.signOut();\r\n\r\n//     }\r\n//     renderAuthButton() {\r\n//     if  (this.state.isSignedIn === null){\r\n//         return null;\r\n//     } else  if (this.state.isSignedIn){\r\n//         return (<button onClick = {this.onSignOutClick} className=\"ui red google button\"> \r\n//          {/* no parenthesis on onsignin because we dont want this to execute when page loads */}\r\n//             <i className = \"google icon\"> SignOut </i>\r\n//             </button>\r\n//             )\r\n//     }\r\n//     return (<button onClick = {this.onSignInClick} className=\"ui red google button\">\r\n//     <i className = \"google icon\">SignIn with Google</i>\r\n//     </button>\r\n//     )\r\n// }    \r\n// render(){ \r\n//        return <div>   {this.renderAuthButton()}         </div>\r\n// }\r\n\r\n// }\r\n\r\n// export default GoogleAuth;\r\n\r\n\r\n// This is using redux , Action Creators are managing access to gapi\r\nclass GoogleAuth extends React.Component{\r\n\r\n    state = {isSignedIn : null};\r\n    componentDidMount(){\r\n        window.gapi.load('client:auth2' , () =>{\r\n            window.gapi.client.init({\r\n                clientId : '548147403800-qhiek0431mroa1d8vv1n8rb65p6dvg2r.apps.googleusercontent.com' ,\r\n                scope: 'email'\r\n            }).then( () =>{\r\n\r\n                this.auth = window.gapi.auth2.getAuthInstance();\r\n                 this.setState({ isSignedIn : this.auth.isSignedIn.get()}) \r\n                \r\n                this.auth.isSignedIn.listen(this.onAuthChange);\r\n            });\r\n        });\r\n    }\r\n    onAuthChange = (isSignedIn) =>{\r\n\r\n        //this.setState({ isSignedIn : this.auth.isSignedIn.get()}) ;\r\n    }\r\n\r\n    onSignInClick= () => {\r\n        this.auth.signIn();\r\n    }\r\n\r\n    onSignOutClick = () => {\r\n        this.auth.signOut();\r\n\r\n    }\r\n    renderAuthButton() {\r\n    if  (this.state.isSignedIn === null){\r\n        return null;\r\n    } else  if (this.state.isSignedIn){\r\n        return (<button onClick = {this.onSignOutClick} className=\"ui red google button\"> \r\n         {/* no parenthesis on onsignin because we dont want this to execute when page loads */}\r\n            <i className = \"google icon\"> SignOut </i>\r\n            </button>\r\n            )\r\n    }\r\n    return (<button onClick = {this.onSignInClick} className=\"ui red google button\">\r\n    <i className = \"google icon\">SignIn with Google</i>\r\n    </button>\r\n    )\r\n}    \r\nrender(){ \r\n       return <div>   {this.renderAuthButton()}         </div>\r\n}\r\n\r\n}\r\nexport default connect(null,{signIn, signOut})(GoogleAuth);\r\n"]},"metadata":{},"sourceType":"module"}
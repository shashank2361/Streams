{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    console.log(this.props.currentUserId);\n\n    if (stream.userId === this.props.currentUserId && this.props.currentUserId > 0) {\n      return React.createElement(\"div\", {\n        className: \"right floated content \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/streams/edit/${stream.id}`,\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \" Edit\"), React.createElement(\"button\", {\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \" Delete\"));\n    }\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/streams/new\",\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Create Stream\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"          \", this.renderAdmin(stream), React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, stream.title, React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, stream.description)));\n    });\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Streams\"), React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.renderList()), this.renderCreate());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["E:/React/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","console","log","currentUserId","userId","id","renderCreate","isSignedIn","textAlign","renderList","streams","map","title","description","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {fetchStreams} from'../../actions';\r\n\r\n\r\nclass StreamList extends React.Component{\r\ncomponentDidMount(){\r\n    this.props.fetchStreams();\r\n}\r\n\r\n \r\nrenderAdmin(stream){\r\n \r\nconsole.log(this.props.currentUserId )\r\n    \r\nif( stream.userId === this.props.currentUserId &&  this.props.currentUserId > 0){\r\n\r\n            return ( <div className=\"right floated content \">\r\n                        <Link  to = {`/streams/edit/${stream.id}`} className = \"ui button primary\"> Edit</Link> \r\n                        <button className = \"ui button negative\"> Delete</button> \r\n\r\n                </div>)\r\n    }\r\n}\r\n\r\n\r\nrenderCreate(){\r\n    if(this.props.isSignedIn){\r\n        return(\r\n            <div style = {{textAlign :'right'}}>\r\n                <Link to = \"/streams/new\" className=\"ui button primary\">Create Stream</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nrenderList () {\r\n\r\n    return this.props.streams.map( stream => {\r\n        return (<div className = \"item\" key ={stream.id}>          {this.renderAdmin(stream)}\r\n\r\n            <i className=\"large middle aligned icon camera\" />\r\n    <div className =\"content\">{stream.title}\r\n    <div className = \"description\">{stream.description}</div>\r\n    </div>\r\n        </div>)\r\n    })\r\n}\r\n\r\n  render (){ \r\n      console.log(this.props.streams);\r\n    return <div>\r\n              <h2>Streams</h2>\r\n                <div className = \"ui celled list\">{this.renderList()}</div>\r\n                {this.renderCreate()}\r\n        </div>\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {streams :Object.values(state.streams),\r\n    currentUserId: state.auth.userId ,\r\n    isSignedIn : state.auth.isSignedIn\r\n    }\r\n}\r\n \r\nexport default connect (mapStateToProps,{fetchStreams}) (StreamList);\r\n"]},"metadata":{},"sourceType":"module"}
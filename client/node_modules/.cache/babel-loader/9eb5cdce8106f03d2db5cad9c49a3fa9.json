{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n  renderInput(input, label) {\n    return React.createElement(\"div\", {\n      className: \" field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \" \", input.label, \"  \"), React.createElement(\"input\", Object.assign({}, input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }))) // <input   {...formProps.input}   />   // jsx syntax 0f below syntax\n    // <input   onChange ={formProps.input.onChange}  value= {formProps.input.value}  />\n    ;\n  }\n\n  handleSubmit(user) {\n    console.log(user); // Do whatever you like in here.\n    // If you connect the UserForm to the Redux store,\n    // you can dispatch actions such as:\n    // dispatch(actions.submit('user', somePromise));\n    // etc.\n  }\n\n  onSubmit(formValues) {\n    console.log(formValues); //    event.preventDefault();\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"form\", {\n      onSubmit: user => this.props.handleSubmit(user),\n      className: \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Enter Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Enter Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"\",\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default reduxForm({\n  form: 'streamCreate'\n})(StreamCreate);","map":{"version":3,"sources":["E:/React/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","renderInput","input","label","handleSubmit","user","console","log","onSubmit","formValues","render","props","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;;AAGA,MAAOC,YAAP,SAA4BH,KAAK,CAACI,SAAlC,CAA2C;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAOC,KAAP,EAAe;AACrB,WACG;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAASD,KAAK,CAACC,KAAf,OADA,EAEI,+CAAWD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,CADH,CAMG;AACA;AAPH;AAUJ;;AAGDE,EAAAA,YAAY,CAACC,IAAD,EAAO;AAEfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAFe,CAGf;AACA;AACA;AACA;AACA;AACD;;AAGHG,EAAAA,QAAQ,CAACC,UAAD,EAAY;AACpBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,UAAZ,EADoB,CAExB;AACC;;AAEGC,EAAAA,MAAM,GAAE;AACJJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAjB;AACA,WAAS;AAAO,MAAA,QAAQ,EAAON,IAAD,IAAU,KAAKM,KAAL,CAAWP,YAAX,CAAyBC,IAAzB,CAA/B;AAA+D,MAAA,SAAS,EAAC,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAE,KAAKJ,WAApC;AAAuD,MAAA,KAAK,EAAG,aAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,EAEL,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AACA,MAAA,SAAS,EAAE,KAAKA,WADhB;AAEA,MAAA,KAAK,EAAG,mBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,EAML;AAAS,MAAA,IAAI,EAAC,EAAd;AAAgB,MAAA,SAAS,EAAC,mBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANK,CAAT;AAUH;;AA5CsC;;AAgD3C,eAAgBH,SAAS,CAAC;AAClBc,EAAAA,IAAI,EAAC;AADa,CAAD,CAAT,CAETb,YAFS,CAAhB","sourcesContent":["import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\n\r\n\r\nclass  StreamCreate extends React.Component{\r\n\r\n    renderInput(input,label  ){\r\n         return (\r\n            <div className=\" field\">\r\n            <label> {input.label}  </label>\r\n                <input {...input}   />\r\n            </div>\r\n            \r\n            // <input   {...formProps.input}   />   // jsx syntax 0f below syntax\r\n            // <input   onChange ={formProps.input.onChange}  value= {formProps.input.value}  />\r\n        \r\n        )\r\n    }\r\n\r\n\r\n    handleSubmit(user) {\r\n      \r\n        console.log(user)\r\n        // Do whatever you like in here.\r\n        // If you connect the UserForm to the Redux store,\r\n        // you can dispatch actions such as:\r\n        // dispatch(actions.submit('user', somePromise));\r\n        // etc.\r\n      }\r\n\r\n\r\n    onSubmit(formValues){\r\n    console.log(formValues)\r\n//    event.preventDefault();\r\n}\r\n\r\n    render(){\r\n        console.log(this.props);\r\n        return ( <form  onSubmit = {  (user) => this.props.handleSubmit( user)} className=\"ui form\">\r\n            <Field name=\"title\" component={this.renderInput}       label = \"Enter Title\" />\r\n            <Field name=\"description\" \r\n            component={this.renderInput} \r\n            label = \"Enter Description\" \r\n            /> \r\n            <button  type=\"\"className=\"ui button primary\">Submit</button>\r\n\r\n        \r\n        </form>)\r\n    }\r\n    \r\n}\r\n\r\nexport default  reduxForm({\r\n        form:'streamCreate'\r\n    })(StreamCreate);\r\n"]},"metadata":{},"sourceType":"module"}